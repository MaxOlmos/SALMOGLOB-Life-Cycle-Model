

# ____________________________________________________________________________________________________________________#
# ____________________________________________________________________________________________________________________#

#    		              			 LIFE CYCLE MODEL				                      #					 

###  JAGS Code used in : Olmos et al., (YEAR),  Evidence for spatial coherence in time trends of 
# marine life history traits of Atlantic salmon in the North Atlantic

# ____________________________________________________________________________________________________________________#
# ____________________________________________________________________________________________________________________#


## In this code : 
# NAC = North American Complex = NA (North America)  in the manuscript
# SNEAC = South Northern European Complex =SE (Southern Europe)  in the manuscript


# ----------------------------------------------------------------------------------------------------------------------- #
# ----------------------------------------------------------------------------------------------------------------------- #
#                               					DATA BLOCK
# ----------------------------------------------------------------------------------------------------------------------- #
# ----------------------------------------------------------------------------------------------------------------------- #


data{

# Length of the time series
# n2 = number of years with data ; to be read in the data set
# n =n2
# -------------------------------------------------------------------------------------------------------------------------

n <- n2 

## For M1
# Parameter for the Wishart prior distribution
# on the variance covariance-matrix for theta3 and theta4
# -------------------------------------------------------------------------------------------------------------------------


ddl <- N

	for (i in 1:N)
	{
		for (j in 1:N)
		{
		omega[i,j] <- 1*(i==j)
		}
	}


# For M2
# Parameter for the Wishart prior distribution
# on the variance covariance-matrix for theta3 and theta4
# -------------------------------------------------------------------------------------------------------------------------

ddl1 <- N.NAC
ddl2 <- N.SNEAC

	for (i in 1:N.NAC)
	{
		for (j in 1:N.NAC)
		{
		omega1[i,j] <- 1*(i==j)
		}
	}

	for (i in 1:N.SNEAC)
	{
		for (j in 1:N.SNEAC)
		{
		omega2[i,j] <- 1*(i==j)
		}
	}


# Calculate mean of returns directly from data in log-scale
# -------------------------------------------------------------------------------------------------------------------------

	for (r in 1:N)
	{  
		for (t in 1:n2)
		{
		R1sw.m[t,r] <- exp(log.R1SW.m[t,r] + 0.5/log.R1SW.tau[t,r])
		R2sw.m[t,r] <- exp(log.R2SW.m[t,r] + 0.5/log.R2SW.tau[t,r])
		}
	}

# Calculate average egg deposition directly from the mean of resturns
# This is used to initialize eggs number for the first years of the life cycle
# -------------------------------------------------------------------------------------------------------------------------


	for (r in 1:N)
	{  
		for (t in 1:5)
		{ 
		N1.m[t,r] <- (R1sw.m[t,r]-hw.C1sw[t,r])*eggs[1,r] + (R2sw.m[t,r]-hw.C2sw[t,r])*eggs[2,r]
		}

	mu.N1.pr[r] <- log(mean(N1.m[1:5,r])) 	
	}
	
	for (r in 1:N)
	{
	min.log.N9[r] <- log(mean(R2sw.m[1:5,r])/10)
	max.log.N9[r] <- log(mean(R2sw.m[1:5,r])*10) 
	}
	
} #------------------------------------------------------------ end data block
	


# ----------------------------------------------------------------------------------------------------------------------- #
# ----------------------------------------------------------------------------------------------------------------------- #
#                                 					MODEL
# ----------------------------------------------------------------------------------------------------------------------- #
# ----------------------------------------------------------------------------------------------------------------------- #

model{


###########################################################################################################################
##					FIX PARAMETERS AND PRIORS						        ##
###########################################################################################################################

# General dummy noise
# All demographic transitions are modelled using logNormal process noise
# with a variance arbitrarily fixed to a very low value corresponding 
# to a coefficent of variation CV.dummy (read in the data set = 0.01)
# -------------------------------------------------------------------------------------------------------------------------

sigma2.s <- log(CV.dummy*CV.dummy + 1)
tau.dummy <- 1/sigma2.s 

# Survival eggs --> Total smolts
# theta1 in a very informative logNormal prior
# E.theta1 and CV.theta1 read in the data
# -------------------------------------------------------------------------------------------------------------------------

CV.theta1.sensi <-0.05
sigma2.theta1 <- log(CV.theta1.sensi*CV.theta1.sensi + 1)
tau.theta1 <- 1/sigma2.theta1
 
# LogNormal random noise about the average proportion of smolts ages
# -------------------------------------------------------------------------------------------------------------------------

CV.psm <- CV.dummy
sigma2.psm <- log(CV.psm*CV.psm + 1)
tau.psm <- 1/sigma2.psm

# Natural mortality
# Parameterized as monthly mortality rate M
# ~LogNormal with E.M and CV.M read in the data set
# Considered constant after PFA
# Is applied for all stages between PFA and returns
# using duration deltat.
# -------------------------------------------------------------------------------------------------------------------------

sigma2.M <- log(CV.M*CV.M + 1)
tau.log.M <- 1/sigma2.M	
E.log.M <- log(E.M) - 0.5/tau.log.M
M ~ dlnorm(E.log.M,tau.log.M)
 


# Prior on post-smolts survival
#     theta3 ; Smolt N3.tot[t] --> PFA N4[t+1]
# and probability to mature the first year at sea
#     theta4 : N4[t] --> N5[t] + N8[t] 
# -------------------------------------------------------------------------------------------------------------------------

# -------------------------------------------------------------------------------------------------------------------------
# Option model M1
# time series for all stock units modelled as MultiNormal with variance-covariance matrix
# -------------------------------------------------------------------------------------------------------------------------

# Random walk have two parts
# Year 1:4 - estimates are too sensiive to prior on number of fish (smolts)
# not generated by the model
# Variance-covariance not estimated (and an independent variance is isued)
# Year 5:n : Variance-covariance is used
# -------------------------------------------------------------------------------------------------------------------------


# Post-smolts survival theta3 : N3.tot[t] --> N4[t+1]
# -------------------------------------------------------------------------------------------------------------------------

	# Years in 1:4
		
	for (r in 1:N)
	{
	sigma.theta3.init[r] ~ dunif(0,1)
	tau.theta3.init[r] <- 1/pow(sigma.theta3.init[r],2)
			
	# First year
	logit.theta3[1,r] ~ dnorm(0,1)
		
	# Time series as independent random walk	
	for (t in 1:4)
	{
	logit.theta3[t+1, r] ~ dnorm(logit.theta3[t,r], tau.theta3.init[r])
	}
	}

	# Years in 5:n
	
	# variance-covariance matrix
	tau.theta3[1:13, 1:13] ~ dwish(omega[1:13, 1:13],ddl)
	
	for (t in 5:(n-1))
	{
	logit.theta3[t+1, 1:13] ~ dmnorm(logit.theta3[t,1:13], tau.theta3[1:13,1:13])
	}

	for (r in 1:N)
	{
 		for (t in 1:n)
		{
		logit(theta3[t,r]) <- logit.theta3[t,r]
		} 
	}

# Probability early maturing PFA N4[t] --> N5[t] + N8[t]
# -------------------------------------------------------------------------------------------------------------------------

	# t in 1:4
	for (r in 1:N)
	{
	sigma.theta4.init[r] ~ dunif(0,1)
	tau.theta4.init[r] <- 1/pow(sigma.theta4.init[r],2)
		
	# First year
	logit.theta4[1,r] ~ dnorm(0,1)
	
	# Time series as a random walk 
	for (t in 1:4)
	{
	logit.theta4[t+1, r] ~ dnorm(logit.theta4[t,r], tau.theta4.init[r])
	}
	}
	
	# Years in 5:n
	
	# Prior for the variance-covariance matrix
	tau.theta4[1:13, 1:13] ~ dwish(omega[1:13, 1:13],ddl)

	for (t in 5:(n-1))
	{
	logit.theta4[t+1, 1:13] ~ dmnorm(logit.theta4[t,1:13], tau.theta4[1:13, 1:13])
	}

	for (r in 1:N)
	{
 		for (t in 1:n)
		{
		logit(theta4[t,r]) <- logit.theta4[t,r]
		} 
	}
  
  

###########################################################################################################################
##					POPULATION DYNAMIC						           	##
###########################################################################################################################


#### ______________________________________________________________________________
#### 		 N7 N10 : Number of spawners = returns - Homewater catches
#### ______________________________________________________________________________

# Homewater-catches (hw.C1sw[t,r] and hw.C2sw[t,r]) in the data
	  
for (r in 1:N)
{  
  
	for (t in 1:(n2-1))
	{ 
	H.hw.1sw[t,r] ~ dbeta(1,1)
	}

	for (t in 1:n2)
	{ 
	H.hw.2sw[t,r] ~ dbeta(1,1)
	}

  

#  1SW 
# -------------------------------------------------------------------------------------------------------------------	

	for (t in 1:(n2-1))
	{ 
	hwCatches1SW[t,r] <- H.hw.1sw[t,r] * N6[t,r]		
	N7[t,r] <- N6[t,r] * (1- H.hw.1sw[t,r])
	}

#  2SW 
# -------------------------------------------------------------------------------------------------------------------	

	for(t in 1:n2)
	{   
	hwCatches2SW[t,r] <- H.hw.2sw[t,r] * N9[t,r]	
	N10[t,r] <- N9[t,r] * (1-H.hw.2sw[t,r]) + (r==4) * Stocking.USA.2sw[t]
	}	
}

#### ______________________________________________________________________________
#### 		 N1 : Number of eggs from spawners
#### ______________________________________________________________________________

for (r in 1:N)
{  
	for (t in 1:(n-1))
	{
	N1[t,r] <- N7[t,r]*eggs[1,r] + N10[t,r]*eggs[2,r]
	}
}

#### ______________________________________________________________________________
#### 		N2 : Eggs --> total Smolts per cohorts (survival known and fixed to E.theta1)
#### ______________________________________________________________________________

 

# noddp
# -------------------------------------------------------------------------------------------------------------------	
 for (r in 1:N)
{  
	for (t in 1:(n-1))
	{
	log.N2.m[t,r] <- log(N1[t,r]*E.theta1 + eps) - 0.5/tau.theta1
	N2[t,r] ~ dlnorm(log.N2.m[t,r],tau.theta1)
	}
}

  

#### ______________________________________________________________________________
#### 		N3 :  Smolts distribution  by age class : 6 age classes
#### ______________________________________________________________________________

# Dirichlet Informative prior
# Information equivalent to the one gained with a sample size = N.Sample
# -------------------------------------------------------------------------------------------------------------------------
# To improve computationnal speed, the Dirichlet is written with Gamma
	
for (r in 1:N) 
{

	for (k in 1:nSm)
	{
	mu.psm[k,r] <- (p.smolt[k,r])*N.Sample.sm +1
	
	for (t in 1:n)
		{
		# psm.stoch[t,1:nSm,r] ~ ddirich(mu.psm[1:nSm,r])
		prop_gamma[t,k,r] ~ dgamma(mu.psm[k,r],1)
		psm.stoch[t,k,r] <- prop_gamma[t,k,r]/sum(prop_gamma[t,,r])
		}
	}
	
# Proportions with logNormal random noise
# -------------------------------------------------------------------------------------------------------------------------

	for (t in 1:(n-1))
	{
		for (k in 1:nSm)
		{
		log.Sm.m[t+1+k,k,r] <- log(psm.stoch[t,k,r]*N2[t,r] + eps) - 0.5/tau.psm
		N3[t+1+k,k,r] ~ dlnorm(log.Sm.m[t+1+k,k,r],tau.psm)
		}
	}
 
# Total smolt migrating each year t
# -------------------------------------------------------------------------------------------------------------------------

	for (t in 1:(n-1))
	{ 
	N3.tot[t,r] <- sum(N3[t,1:nSm,r])
	}
	N3.pro[1,r] <- sum(N3[1,1:nSm,r])

}

#### ______________________________________________________________________________
#### 		 N4 : Smolt --> PFA (N4)
####  		From N3.tot and survival theta3
#### ______________________________________________________________________________

	for (r in 1:N)
	{
		for (t in 1:(n-1))
		{
		log.N4.m[t+1,r] <- log(theta3[t,r]*N3.tot[t,r] + eps) - 0.5/tau.dummy
		N4[t+1,r] ~ dlnorm(log.N4.m[t+1,r],tau.dummy)
		}

#### ______________________________________________________________________________
#### 		N5 : PFA maturing during the fisrt year at sea
####  		From N4 (PFA) and theta4 = proba maturing the first year at sea
#### ______________________________________________________________________________
	
		for (t in 1:n)
		{
		log.N5.m[t,r] <-  log(N4[t,r] * theta4[t,r] + eps ) - 0.5/tau.dummy
		N5[t,r] ~ dlnorm(log.N5.m[t,r], tau.dummy)
		
#### ______________________________________________________________________________
#### 		N8 : PFA non maturing after the fisrt year at sea
####  		From N4 (PFA) and (1-theta4)
#### ______________________________________________________________________________		

		log.N8.m[t,r] <- log(N4[t,r] * (1-theta4[t,r]) + eps) - 0.5/tau.dummy
		N8[t,r] ~ dlnorm(log.N8.m[t,r], tau.dummy)
		}
	}

#### ______________________________________________________________________________
#### 		 N6 PFA to returns	
####  		MATURING FISH
#### ______________________________________________________________________________	
	
		
##    NAC - LB/NF and SPM fisheries and returns to N6
## --------------------------------------------------------------------------------------------------------------------------
## --------------------------------------------------------------------------------------------------------------------------


# Natural mortality between sequential fisheries
# --------------------------------------------------------------------------------------------------------------------------


	# PFA to Labrador 1SWm
	# --------------------------------------------------------------------------------------------------------------------------
	theta5.1.NAC <- exp(-deltat.5.1.NAC*M)

	# Labrador -> SPM
	# --------------------------------------------------------------------------------------------------------------------------
	theta5.2.NAC <- exp(-deltat.5.2.NAC*M)
	
	# SPM ->  Returns (N6)
	# --------------------------------------------------------------------------------------------------------------------------
	theta6.NAC <- exp(-deltat.6.NAC*M)

	# Total survival PFA --> Returns N6
	# --------------------------------------------------------------------------------------------------------------------------
	theta6.tot.NAC <- exp(-(deltat.5.1.NAC + deltat.5.2.NAC + deltat.6.NAC) * M)	

# Prior for harvest rate 
# Hyp : harvest rate homogeneous accross regions
# Except for Greenland fisheries where genetics data are used (from Bradbury et al)
# as a data source for the proportions of each stock unit in catches
# --------------------------------------------------------------------------------------------------------------------------


  

	for (t in 1:(n2-1))
	{
	h5.NAC.1[t] ~ dbeta(1,1)
	
	# other is all except Labrador
	# --------------------------------------------------------------------------------------------------------------------------
	h5.NAC.2.other[t] ~ dbeta(1,1)
	h5.NAC.2.lab[t] ~ dbeta(1,1)
	h5.NAC.3.other[t] ~ dbeta(1,1)
			
	}
  
		
	for (t in 1:(n2-1))
	{		
	
	# h for all r except Labrador
	# --------------------------------------------------------------------------------------------------------------------------
	for(r in 1:(N.NAC-1))
	{
	h5.NAC.2[t,r] <- h5.NAC.2.other[t]
	h5.NAC.3[t,r] <- h5.NAC.3.other[t]
	}
	
	# h for Labrador (r=6)
	# --------------------------------------------------------------------------------------------------------------------------
	h5.NAC.2[t,6] <- h5.NAC.2.lab[t]
	h5.NAC.3[t,6] <- 0
	
	}
		
# Sequential catches at sea 
# --------------------------------------------------------------------------------------------------------------------------

	for (t in 1:(n2-1)) 
	{	
		for (r in 1:N.NAC)
		{
			# LAB/NFDL on 1SW mature
			# -------------------------------------------------------------------------------------------------------------
			C5.NAC.1[t,r] <- h5.NAC.1[t] * theta5.1.NAC * N5[t,r] 

			# NFDL SFA3 on  mature
			# -------------------------------------------------------------------------------------------------------------
			C5.NAC.2[t,r] <- h5.NAC.2[t,r] * N5.1.1[t,r]		
			
			# Saint Pierre et Miquelon on 1sw
			# -------------------------------------------------------------------------------------------------------------
			C5.NAC.3[t,r] <- h5.NAC.3[t,r] * theta5.2.NAC * N5.1.2[t,r]
		}	
	}

	for (t in 1:(n2-1))
	{
		C5.NAC.1.tot[t] <- sum(C5.NAC.1[t,1:6])
		
		C5.NAC.2.other[t] <- sum(C5.NAC.2[t,1:5])
		C5.NAC.2.lab[t] <- C5.NAC.2[t,6]
		
		C5.NAC.3.tot[t] <-  sum(C5.NAC.3[t,1:5])
	}

#  N6 : Returns 1SW NAC
# --------------------------------------------------------------------------------------------------------------------------

# Survival after sequential catches + natural mortality theta5.1
# --------------------------------------------------------------------------------------------------------------------------

	for (r in 1:N.NAC)
	{
		for (t in 1:(n2-1))
		{
		
		# Intermediate stages between sequential fisheries
		# ---------------------------------------------------------------------------------------------------------------------			log.N5.1.1.m[t,r] <- log((1-h5.NAC.1[t]) * theta5.1.NAC * N5[t,r]) - 0.5/tau.dummy
		N5.1.1[t,r]  ~ dlnorm(log.N5.1.1.m[t,r],tau.dummy )
		
		log.N5.1.2.m[t,r] <- log((1-h5.NAC.2[t,r]) * N5.1.1[t,r]) - 0.5/tau.dummy
		N5.1.2[t,r]  ~ dlnorm(log.N5.1.2.m[t,r],tau.dummy )
		
		log.N5.1.m[t,r] <- log((1-h5.NAC.3[t,r]) * theta5.2.NAC * N5.1.2[t,r]) - 0.5/tau.dummy
		N5.1[t,r]  ~ dlnorm(log.N5.1.m[t,r],tau.dummy )

		# Returns
		# ---------------------------------------------------------------------------------------------------------------------
		log.N6.m[t,r] <- log(theta6.NAC * N5.1[t,r]) - 0.5/tau.dummy
		N6[t,r]  ~ dlnorm(log.N6.m[t,r],tau.dummy )
		
		}
	}			
	
	
##     S.NEAC - Faroes fisheries and returns to N6
## --------------------------------------------------------------------------------------------------------------------------
## --------------------------------------------------------------------------------------------------------------------------

# Note that indice for stock unit is r+N.NAC for variables N5
# --------------------------------------------------------------------------------------------------------------------------

# Natural mortality between sequential fisheries
# --------------------------------------------------------------------------------------------------------------------------

	# PFA -> Faroes m
	# --------------------------------------------------------------------------------------------------------------------------
	theta5.SNEAC <- exp(-M*deltat.5.1.SNEAC)
	
	# Faroes  -> returns
	# --------------------------------------------------------------------------------------------------------------------------
	theta6.SNEAC <- exp(-M*(deltat.6.SNEAC))

	
 

#  WITH genetic data to fit proportions  in Faroes catches
# --------------------------------------------------------------------------------------------------------------------------

	# Repartition of catches among stock units
	# --------------------------------------------------------------------------------------------------------------------------
	for (r in 1:N.SNEAC)
	{   
		for(t in 1:(n2-1))
		{ 
	
	# Exploitation rate
	# --------------------------------------------------------------------------------------------------------------------------
		h5.SNEAC.1[t,r] ~ dbeta(1,1)
		}
	}
 	

	for(t in 1:(n2-1))
	{
	# Proportions of different stock units
		for (r in 1:N.SNEAC)
		{  
		p.F1.SNEAC.m[t,r] <- C5.SNEAC.1[t,r]/C5.SNEAC.1.tot[t]
		mu.F1.SNEAC.m[t,r] <- p.F1.SNEAC.m[t,r]*N.Sample[t]
		}
	}


	

#  One harvest rates are defined
# Equations below are the same WITH or WITHOUT genetic data     
# --------------------------------------------------------------------------------------------------------------------------	

	for (r in 1:N.SNEAC)
	{   
		for (t in 1:(n2-1))
		{ 	
		# Catches 
		# ---------------------------------------------------------------------------------------------------------------------
		C5.SNEAC.1[t,r] <- h5.SNEAC.1[t,r] * theta5.SNEAC * N5[t,(r+N.NAC)]
	
		}
	}

	# Repartition of catches among stock units
	# --------------------------------------------------------------------------------------------------------------------------	
	for(t in 1:(n2-1))
	{
	# Total catches
	# --------------------------------------------------------------------------------------------------------------------------	
	C5.SNEAC.1.tot[t] <- sum(C5.SNEAC.1[t,1:N.SNEAC])
	}	
	

#  N6 : Returns 1SW SNEAC
# --------------------------------------------------------------------------------------------------------------------------	
# Note that the stock unit indices is r+N.NAC for variables N5.1 and N6

for (r in 1:N.SNEAC)
{
		for(t in 1:(n2-1))
		{
		log.N5.1.m[t,(r+N.NAC)] <-  log(theta5.SNEAC * (1-h5.SNEAC.1[t,r]) * N5[t,(r+N.NAC)] + eps) - 0.5/tau.dummy
		N5.1[t,(r+N.NAC)]  ~ dlnorm(log.N5.1.m[t,(r+N.NAC)], tau.dummy)
		
		log.N6.m[t,(r+N.NAC)] <-  log(theta6.SNEAC * N5.1[t,(r+N.NAC)] + eps) - 0.5/tau.dummy
		N6[t,(r+N.NAC)]  ~ dlnorm(log.N6.m[t,(r+N.NAC)], tau.dummy)
		}
}

 


#### ______________________________________________________________________________
#### 		 N8: PFA to returns	
####  		NON MATURING FISH
#### ______________________________________________________________________________	

#### ______________________________________________________________________________	
####  		N8 --> N8.1
#### 		 NAC
#### ______________________________________________________________________________	
# LAB/NFDL Fishery
#-------------------------------------------------------------------------------------------------------------------------
# Survival rate theta8.NAC.1
#-------------------------------------------------------------------------------------------------------------------------
# Harvest rate h8.NAC.1
#-------------------------------------------------------------------------------------------------------------------------

	# Survival rate
	#-------------------------------------------------------------------------------------------------------------------------
	theta8.NAC.1 <- exp(-M * deltat.8.1.NAC)

 


	for (t in 1:(n2-1))
	{
	# h homogeneous accross the 6 regions
	#-------------------------------------------------------------------------------------------------------------------------
	h8.NAC.1[t] ~ dbeta(1,1)
	}
	
 

	for (t in 1:(n2-1))
	{	
	# catches	
	#-------------------------------------------------------------------------------------------------------------------------
	for (r in 1:N.NAC)
	{
	C8.NAC.1[t,r] <- h8.NAC.1[t] * theta8.NAC.1 * N8[t,r] 
	}
	
	# Total catches
	#-------------------------------------------------------------------------------------------------------------------------
	C8.NAC.1.tot[t] <- sum(C8.NAC.1[t,1:N.NAC])
	
# Transitions N8 --> N8.1
#-------------------------------------------------------------------------------------------------------------------------
	for (r in 1:N.NAC)
	{
	N8.1.m[t,r] <- (1-h8.NAC.1[t]) * theta8.NAC.1	* N8[t,r]
	log.N8.1.m[t,r] <- log(N8.1.m[t,r] + eps) - 0.5/tau.dummy
	N8.1[t,r]  ~ dlnorm(log.N8.1.m[t,r],tau.dummy )		
	}
	
	}

#### ______________________________________________________________________________	
####  		N8 --> N8.1
#### 		 SNEAC
#### ______________________________________________________________________________	

# Faroes fisheries on non mature fish 1SWnm
#-------------------------------------------------------------------------------------------------------------------------
# Survival rate theta8.SNEAC.1
#-------------------------------------------------------------------------------------------------------------------------
# Harvest rate h8.SNEAC.1
#-------------------------------------------------------------------------------------------------------------------------
	
# Survival rate
#-------------------------------------------------------------------------------------------------------------------------
theta8.SNEAC.1 <- exp(-M*(deltat.8.1.SNEAC))
	
	
 

#  WITH genetic data to fit proportions
#-------------------------------------------------------------------------------------------------------------------------		
	for (t in 1:(n2-1))
	{
	
		for (r in 1:N.SNEAC)
		{
		# Exploitation rate
		#----------------------------------------------------------------------------------------------------------------------
		h8.SNEAC.1[t,r] ~ dbeta(1,1)
		}
	}
 

	for (t in 1:(n2-1))
	{
		
	# Repartition of catches
	#-------------------------------------------------------------------------------------------------------------------------
	for ( r in 1:N.SNEAC)
	{
	p.F1.SNEAC.nm[t,r] <- C8.SNEAC.1[t,r]/C8.SNEAC.1.tot[t]
	mu.F1.SNEAC.nm[t,r] <- p.F1.SNEAC.nm[t,r] * N.Sample[t]
	}
	}
	
		

#  Once harvest rates are defined, equations below are the same WITH or WITHOUT genetic data     
#-------------------------------------------------------------------------------------------------------------------------
	
	for (t in 1:(n2-1))
	{	
	for ( r in 1:N.SNEAC){
	C8.SNEAC.1[t,r] <- h8.SNEAC.1[t,r] * theta8.SNEAC.1 * N8[t,r+N.NAC]
	}	
	# Total catches
	#-------------------------------------------------------------------------------------------------------------------------
	C8.SNEAC.1.tot[t] <- sum(C8.SNEAC.1[t,1:N.SNEAC])		
	
	# Transition N8 --> N8.1
	#-------------------------------------------------------------------------------------------------------------------------
	for (r in 1:N.SNEAC)
	{
	N8.1.m[t,(r+N.NAC)] <-  theta8.SNEAC.1*(1-h8.SNEAC.1[t,r]) * N8[t,(r+N.NAC)]
	log.N8.1.m[t,(r+N.NAC)] <- log(N8.1.m[t,(r+N.NAC)] + eps) - 0.5/tau.dummy
	N8.1[t,(r+N.NAC)]  ~ dlnorm(log.N8.1.m[t,(r+N.NAC)],tau.dummy)		
	}
	
	}	




#### ______________________________________________________________________________	
####  		  N8.1 --> N8.2   Greenland Fisheries  
#### ______________________________________________________________________________	

# NAC + SNEAC - Greenland fisheries 
#-------------------------------------------------------------------------------------------------------------------------
# Harvest rate h8.G2
#-------------------------------------------------------------------------------------------------------------------------
# Survival theta8.NAC.2 for NAC and theta8.SNEAC.2 for SNEAC
#-------------------------------------------------------------------------------------------------------------------------
	
	# NAC
	# Labrador -> Greenland
	#-------------------------------------------------------------------------------------------------------------------------
	theta8.NAC.2 <-  exp(-M * (deltat.8.2.NAC))
	
	#SNEAC
	# Faroes  -> Greenland
	#-------------------------------------------------------------------------------------------------------------------------
	theta8.SNEAC.2 <- exp(-M * (deltat.8.2.SNEAC))


 

#  WITH genetic data to fit proportions
#-------------------------------------------------------------------------------------------------------------------------
	# Exploitation rates, all different for all stock units NAC +SNEAC
	#-------------------------------------------------------------------------------------------------------------------------
	for (r in 1:N)
	{   
		for(t in 1:(n2-1))
		{ 
		h8.G2[t,r] ~ dbeta(1,1)
    	}
	}
 		

	# Repartition of catches among stock units
	# Fitted to observed proportions
	#-------------------------------------------------------------------------------------------------------------------------
	
	for (t in 1:(n2-1))
	{
		for (r in 1:N)
		{
		p.Gld[t,r] <- C8.G2[t,r]/C8.G2.tot[t]
		# Dirichlet likelihood for observed proportions
		#----------------------------------------------------------------------------------------------------------------------
		mu.Gld[t,r] <- p.Gld[t,r]*N.Sample[t]
		}
	}



#  Equations below are the same WITH or WITHOUT genetic data     
# Not the same survival rate for NAC and S.NEAC
#-------------------------------------------------------------------------------------------------------------------------
	
	for(t in 1:(n2-1))
	{	
		# NAC
		#----------------------------------------------------------------------------------------------------------------------
		for (r in 1:N.NAC)
		{
		C8.G2[t,r] <- h8.G2[t,r] * theta8.NAC.2 * N8.1[t,r]
		}
		# SNEAC
		#----------------------------------------------------------------------------------------------------------------------
		for (r in 1:N.SNEAC)
		{
		C8.G2[t,r+N.NAC] <- h8.G2[t,r+N.NAC] * theta8.SNEAC.2 * N8.1[t,r+N.NAC]
		}
		# Total catches
		#----------------------------------------------------------------------------------------------------------------------
		C8.G2.tot[t] <- sum(C8.G2[t,1:N])	
	}
		
	
# Transitions N8.1 --> N8.2 (after Greenland)
#-------------------------------------------------------------------------------------------------------------------------
		
	for (t in 1:(n2-1))
	{
		# NAC
		#----------------------------------------------------------------------------------------------------------------------
		for (r in 1:N.NAC)
		{
		N8.2.m[t,r] <- (1-h8.G2[t,r]) * theta8.NAC.2 * N8.1[t,r]	
		log.N8.2.m[t,r] <- log(N8.2.m[t,r] + eps) - 0.5/tau.dummy
		N8.2[t,r]  ~ dlnorm(log.N8.2.m[t,r],tau.dummy )			
		}
			
		# SNEAC
		#----------------------------------------------------------------------------------------------------------------------
		for (r in 1:N.SNEAC)
		{
		N8.2.m[t,(r+N.NAC)] <-  theta8.SNEAC.2 * (1-h8.G2[t,r+N.NAC]) * N8.1[t,(r+N.NAC)]	
		log.N8.2.m[t,(r+N.NAC)] <- log(N8.2.m[t,(r+N.NAC)] + eps) - 0.5/tau.dummy
		N8.2[t,(r+N.NAC)] ~ dlnorm(log.N8.2.m[t,(r+N.NAC)],tau.dummy)
		}
	}

      


#### ______________________________________________________________________________	
####  		  From N8.2 to returns as 2SW fish N9
# AFTER Greenland Fisheries
#### ______________________________________________________________________________	


#  NAC
# Sequential fisheries LB/NF and SPM
# _____________________________________________________________

	# Greenland -> Labrador/NF 2SW
	#-------------------------------------------------------------------------------------------------------------------------
	theta8.NAC.3 <- exp(-M * (deltat.8.3.1.NAC))

	# Labrador -> SPM 2SW
	#-------------------------------------------------------------------------------------------------------------------------
	theta8.NAC.4 <- exp(-M * (deltat.8.3.2.NAC))

	# SPM -> returns 2SW
	#-------------------------------------------------------------------------------------------------------------------------
	theta9.NAC <- exp(-M * deltat.9.NAC)
      	

	# NF on 2SW
	# h8.NAC.3	
	# Homogeneous accross the 6 regions
	#-------------------------------------------------------------------------------------------------------------------------
	for (t in 1:n2)
	{
	h8.NAC.3[t] ~ dbeta(1,1)
	}

      		
	# Catches
	#-------------------------------------------------------------------------------------------------------------------------
	
	for (t in 1:(n2-1))
	{
		for (r in 1:N.NAC)
		{
		C8.NAC.3[t+1,r] <- h8.NAC.3[t+1] * theta8.NAC.3 * N8.2[t,r]
		}
	C8.NAC.3.tot[t+1] <- sum(C8.NAC.3[t+1,1:N.NAC])
	}
      		

	# LB on 2SW
	# h8.NAC.4
	# Homogeneous accross the 5 regions except Labrador (r=6)
	#-------------------------------------------------------------------------------------------------------------------------	
	for (t in 1:n2)
	{
	h8.NAC.4.other[t] ~ dbeta(1,1)
	h8.NAC.4.lab[t] ~ dbeta(1,1)
	}
	
      		
	for (t in 1:n2)
	{
	for(r in 1:5)
		{
		h8.NAC.4[t,r] <- h8.NAC.4.other[t]
		}
	h8.NAC.4[t,6] <- h8.NAC.4.lab[t]
	}
	
	# Catches
	#-------------------------------------------------------------------------------------------------------------------------
	for (t in 1:n2)
	{
		for (r in 1:N.NAC)
		{
		C8.NAC.4[t,r] <- h8.NAC.4[t,r] * N8.3.1[t,r]
		}
	C8.NAC.4.other[t] <- sum(C8.NAC.4[t,1:5])
	C8.NAC.4.lab[t] <- C8.NAC.4[t,6]
	}
	

      		
	
	# SPM 2SW
	# h8.NAC.5
	# Homogeneous accross the 5 regions except Labrador (r=6)
	#-------------------------------------------------------------------------------------------------------------------------

	for (t in 1:n2)
	{
	h8.NAC.5.other[t] ~ dbeta(1,1)
	}	

      		
	for (t in 1:n2)
	{	
		for(r in 1:5)
		{
		h8.NAC.5[t,r] <- h8.NAC.5.other[t]
		}
	h8.NAC.5[t,6] <- 0
	}
	
	# Catches
	#-------------------------------------------------------------------------------------------------------------------------
	for (t in 1:n2)
	{
		for (r in 1:N.NAC)
		{
		C8.NAC.5[t,r] <- h8.NAC.5[t,r] * theta8.NAC.4 * N8.3.2[t,r]
		}
	C8.NAC.5.tot[t] <- sum(C8.NAC.5[t,1:N.NAC])
	}
	

#  N9 : Returns 2SW NAC
#-------------------------------------------------------------------------------------------------------------------------


	for (r in 1:N.NAC)
	{
		for (t in 1:(n2-1))
		{
		N8.3.1.m[t+1,r] <- (1-h8.NAC.3[t+1]) * theta8.NAC.3 * N8.2[t,r]	
		log.N8.3.1.m[t+1,r] <- log(N8.3.1.m[t+1,r] + eps) - 0.5/tau.dummy
		N8.3.1[t+1,r]  ~ dlnorm(log.N8.3.1.m[t+1,r],tau.dummy )		

		N8.3.2.m[t+1,r] <- (1-h8.NAC.4[t+1,r]) * N8.3.1[t+1,r]
		log.N8.3.2.m[t+1,r] <- log(N8.3.2.m[t+1,r] + eps) - 0.5/tau.dummy
		N8.3.2[t+1,r]  ~ dlnorm(log.N8.3.2.m[t+1,r],tau.dummy )				
				
		N8.3.m[t+1,r] <- (1-h8.NAC.5[t+1,r]) * theta8.NAC.4	* N8.3.2[t+1,r]
		log.N8.3.m[t+1,r] <- log(N8.3.m[t+1,r] + eps) - 0.5/tau.dummy
		N8.3[t+1,r]  ~ dlnorm(log.N8.3.m[t+1,r],tau.dummy )				
		
		N9.m[t+1,r] <- theta9.NAC * N8.3[t+1,r]		
		log.N9.m[t+1,r] <- log(N9.m[t+1,r] + eps) - 0.5/tau.dummy
		N9[t+1,r]  ~ dlnorm(log.N9.m[t+1,r],tau.dummy )
		}
	}	
	 
			
			
# SNEAC
# Faroes 2SW fisheries and return
#-------------------------------------------------------------------------------------------------------------------------

	# Greenland -> Faroes 2sw
	#-------------------------------------------------------------------------------------------------------------------------
	theta8.SNEAC.3 <- exp(-M * (deltat.8.3.SNEAC))
	
	# Faroes -> Returns
	#-------------------------------------------------------------------------------------------------------------------------
	theta9.SNEAC <- exp(-M * (deltat.9.SNEAC))
	
 

#  WITH genetic data to fit proportions on 2SW Faroes catches
#-------------------------------------------------------------------------------------------------------------------------
	for (r in 1:N.SNEAC)
	{
	#-------------------------------------------------------------------------------------------------------------------------
		for(t in 1:n2)
		{
		h8.SNEAC.3[t,r] ~ dbeta(1,1)
		}
	}
	
 


	# Proportion of each stock units in catches
	#-------------------------------------------------------------------------------------------------------------------------
	for(t in 2:n2)
	{
	for ( r in 1:N.SNEAC)
		{
		p.F2.SNEAC[t,r] <- C8.SNEAC.3[t,r]/C8.SNEAC.3.tot[t]
		mu.F2.SNEAC[t,r] <- p.F2.SNEAC[t,r]*N.Sample[t]
		}
	}
	
	
	

#  Equations below are the same WITH or WITHOUT genetic data     
#-------------------------------------------------------------------------------------------------------------------------
	
	# Catches
	#-------------------------------------------------------------------------------------------------------------------------
	for (r in 1:N.SNEAC)
	{
	for(t in 1:(n2-1))
	{		 
	C8.SNEAC.3[t+1,r] <- h8.SNEAC.3[t+1,r] * theta8.SNEAC.3 * N8.2[t,r+N.NAC]
	}
	}
	
	for(t in 2:n2)
	{
	# Total catches
	#-------------------------------------------------------------------------------------------------------------------------
	C8.SNEAC.3.tot[t] <- sum(C8.SNEAC.3[t,1:N.SNEAC])
	}
		


#  Returns 2SW S.NEAC
#-------------------------------------------------------------------------------------------------------------------------
for(t in 1:(n2-1))
{
	for ( r in 1:N.SNEAC)
	{
	N8.3.m[t+1,(r+N.NAC)] <-  theta8.SNEAC.3 * (1-h8.SNEAC.3[t+1,r])*N8.2[t,(r+N.NAC)]	
	log.N8.3.m[t+1,(r+N.NAC)] <- log(N8.3.m[t+1,(r+N.NAC)] + eps) - 0.5/tau.dummy
	N8.3[t+1,(r+N.NAC)] ~ dlnorm(log.N8.3.m[t+1,(r+N.NAC)],tau.dummy)
		
	N9.m[t+1,(r+N.NAC)] <-  theta9.SNEAC * N8.3[t+1,(r+N.NAC)]
	log.N9.m[t+1,(r+N.NAC)] <- log(N9.m[t+1,(r+N.NAC)] + eps) - 0.5/tau.dummy
	N9[t+1,(r+N.NAC)] ~ dlnorm(log.N9.m[t+1,(r+N.NAC)],tau.dummy)
	}
}

	

###########################################################################################################################
##						  OBSERTVATION EQUATIONS					##
###########################################################################################################################

# Returns
# Mean and variance in the data
#--------------------------------------------

# Returns
# Mean and variance in the data
#-------------------------------------------------------------------------------------------------------------------------
# Returns of 1SW are fitted to data up to (n2-1)
# but 2SW are fitted up to n2

# 1 SW
#------------------------------------------------------------------------------------------------------------------
	for (t in 1:(n2-1))
	{
		for (r in 1:N)
		{
		log.R1SW.m[t,r] ~ dnorm(log(N6[t,r]),log.R1SW.tau[t,r])
		res.1[t,r] <- (log.R1SW.m[t,r] - log(N6[t,r])) * pow(log.R1SW.tau[t,r],0.5)
		}	
	}
	
# 2 SW
#------------------------------------------------------------------------------------------------------------------
	for (t in 1:n2)
	{		
		for (r in 1:N)
		{
		log.R2SW.m[t,r] ~ dnorm(log(N9[t,r]),log.R2SW.tau[t,r])
		res.2[t,r] <- (log.R2SW.m[t,r] - log(N9[t,r])) * pow(log.R2SW.tau[t,r],0.5)
		}
	}

# Homewater catches
# Mean in the data and arbitrary dummy variance
#------------------------------------------------------------------------------------------------------------------
# Homewater catches of 1SW are fitted to data up to (n2-1)
# but 2SW are fitted up to n2

# 1 SW
#------------------------------------------------------------------------------------------------------------------
	
	for(t in 1:(n2-1))
	{
		for (r in 1:N)
		{
		log.hwCatches1SW[t,r] <- log(hwCatches1SW[t,r] + eps) - 0.5/tau.hw
		hw.C1sw[t,r] ~ dlnorm(log.hwCatches1SW[t,r],tau.hw)
		}
	}

# 2 SW
#------------------------------------------------------------------------------------------------------------------
		
	for(t in 1:n2)
	{
		for (r in 1:N)
		{
		log.hwCatches2SW[t,r] <- log(hwCatches2SW[t,r] + eps) - 0.5/tau.dummy 
		hw.C2sw[t,r] ~ dlnorm(log.hwCatches2SW[t,r],tau.dummy)
		}
	}   
	

# Catches at sea
# Mean and variance in the data
# Only total catches are used here
# In the case where genetic data re used, 
# proportions of each stock unit in catches are used earlier
#------------------------------------------------------------------------------------------------------------------
 
##  West Greenland NAC + S.NEAC
#------------------------------------------------------------------------------------------------------------------
	for ( t in 1:(n2-1))
	{
	log.C8.G2.tot[t] <- log(C8.G2.tot[t] + eps)
	log.CG2.m[t]  ~ dnorm(log.C8.G2.tot[t], log.CG2.tau[t])
	} 

## NAC
#------------------------------------------------------------------------------------------------------------------
 
#------------------------------------------------------------------------------------------------------------------
	
	for (t in 1:(n2-1))
	{
		log.C5.NAC.1.tot[t] <- log(C5.NAC.1.tot[t] + eps)
		log.C1.Nf.3_7.m[t] ~ dnorm(log.C5.NAC.1.tot[t], log.C1.Nf.3_7.tau[t])
	
		log.C5.NAC.2.other[t] <- log(C5.NAC.2.other[t] + eps)
		log.C1.LbNf.other.m[t] ~ dnorm(log.C5.NAC.2.other[t], log.C1.LbNf.other.tau[t])

		log.C5.NAC.2.lab[t] <- log(C5.NAC.2.lab[t] + eps)
		log.C1.tot.Lb.m[t] ~ dnorm(log.C5.NAC.2.lab[t], log.C1.tot.Lb.tau[t])
		
		log.C5.NAC.3.tot[t] <- log(C5.NAC.3.tot[t] + eps) 
		log.C1.SPM[t] ~ dnorm(log.C5.NAC.3.tot[t], log.C1.SPM.tau[t])	
	}

# Non mature fish
#------------------------------------------------------------------------------------------------------------------

	for (t in 1:(n2-1))
	{
	log.C8.NAC.1.tot[t] <- log(C8.NAC.1.tot[t] + eps) 
	log.C1.nm.LbNf.m[t] ~ dnorm(log.C8.NAC.1.tot[t], log.C1.nm.LbNf.tau[t])
	}
	
	for (t in 2:n2)
	{
	log.C8.NAC.3.tot[t] <- log(C8.NAC.3.tot[t] + eps)
	log.C2.Nf.3_7.m[t] ~ dnorm(log.C8.NAC.3.tot[t], log.C2.Nf.3_7.tau[t])
	}
	
	for (t in 1:n2)
	{
	log.C8.NAC.4.other[t] <- log(C8.NAC.4.other[t] + eps)
	log.C2.LbNf.other.m[t] ~ dnorm(log.C8.NAC.4.other[t], log.C2.LbNf.other.tau[t])

	log.C8.NAC.4.lab[t] <- log(C8.NAC.4.lab[t] + eps)
	log.C2.tot.Lb.m[t] ~ dnorm(log.C8.NAC.4.lab[t], log.C2.tot.Lb.tau[t])
	
	log.C8.NAC.5.tot[t] <- log(C8.NAC.5.tot[t] + eps) 
	log.C2.SPM[t] ~ dnorm(log.C8.NAC.5.tot[t], log.C2.SPM.tau[t])	
	}	
	
## SNEAC
#------------------------------------------------------------------------------------------------------------------

	for(t in 1:(n2-1))
	{	
	log.C8.SNEAC.1.tot[t] <- log(C8.SNEAC.1.tot[t] + eps) 
	log.CF1.nm.SNEAC.m[t] ~ dnorm(log.C8.SNEAC.1.tot[t],log.CG2.tau[t])

	log.C5.SNEAC.1.tot[t] <- log(C5.SNEAC.1.tot[t] +eps) 
	log.CF1.m.SNEAC.m[t] ~ dnorm(log.C5.SNEAC.1.tot[t],log.CG2.tau[t])
	}
   
	for(t in 2:n2)
	{
	log.C8.SNEAC.3.tot[t]  <- log(C8.SNEAC.3.tot[t] + eps)
	log.CF2.SNEAC.m[t] ~ dnorm(log.C8.SNEAC.3.tot[t],log.CF2.SNEAC.tau[t])
	}
	
	
	
## Observation equation for proportion of each stock unit
#------------------------------------------------------------------------------------------------------------------
	# in 1SWm Faroes catches
	for(t in 1:(n2-1))
	{
	prop_F1_SNEAC.m[t,1:N.SNEAC] ~ ddirich(mu.F1.SNEAC.m[t,1:N.SNEAC])
	
	#in 1SWnm Faroes catches
	prop_F1_SNEAC.nm[t,1:N.SNEAC] ~ ddirich(mu.F1.SNEAC.nm[t,1:N.SNEAC])
	
	# in West Greenand catches
	prop_Gld[t,1:N] ~ ddirich(mu.Gld[t,1:N])
	}	

	# in 2SW Faroes catches
	for(t in 2:n2)
	{
	prop_F2_SNEAC[t,1:N.SNEAC] ~ ddirich(mu.F2.SNEAC[t,1:N.SNEAC])	
	}
	
		
# Initialisation of the loop on t
# All number at all stages that are not generated by equations must be initialized in the model 
#-------------------------------------------------------------------------------------------------------------------------

# Initialisation for all smolts that are not generated by the dynamics
# Starting from credible values of number of eggs Eggs (drawn in logNormal)
#-------------------------------------------------------------------------------------------------------------------------

# Realistic prior for the number of eggs (specific to each region)
# (the mean mu.N1.pr is calculated in the data block)
#-------------------------------------------------------------------------------------------------------------------------

CV.N1.pr <- 0.8
sigma2.N1.pr <- log(CV.N1.pr * CV.N1.pr + 1)
tau.N1.pr <- 1/sigma2.N1.pr

for (r in 1:N)
{  
	for(t in 1:(nSm+2))
	{
	log.N1.pr[t,r] ~ dnorm(mu.N1.pr[r],tau.N1.pr)
	N1.pr[t,r] <- exp(log.N1.pr[t,r])
}
}	
		

for (r in 1:N)
{  
	for(t in 1:(nSm+2))
	{
	log.N2.m.pr[t,r] <- log(N1.pr[t,r]*E.theta1) - 0.5/tau.theta1
	N2.pr[t,r] ~ dlnorm(log.N2.m.pr[t,r],tau.theta1)
	}
}
	
		
	
# The same informative Dirichlet distribution for the proportion of smolts age
# is used than the one in the model
#-------------------------------------------------------------------------------------------------------------------------

for (r in 1:N)
{ 
	for(t in 1:(nSm+2))
	{
		for (k in 1:nSm)
		{
		mu.psm.pr[t,k,r] <- (p.smolt[k,r])*N.Sample.sm + 1
		
		
		
		prop_gamma.pr[t,k,r] ~ dgamma(mu.psm.pr[t,k,r],1)
		psm.stoch.pr[t,k,r] <- prop_gamma.pr[t,k,r]/sum(prop_gamma.pr[t,,r])
		}
	
		for (k in 1:nSm)
		{
		log.Sm.m.pr[t+k+1,k,r] <- log(psm.stoch.pr[t,k,r] * N2.pr[t,r] + eps) - 0.5/tau.psm
		N3.pr[t+k+1,k,r] ~ dlnorm(log.Sm.m.pr[t+k+1,k,r],tau.psm)
		}
	}

# Finally this procedure is used to produce initla values for the nuber of smolts
# in the model = N3	
#-------------------------------------------------------------------------------------------------------------------------
	
	for(k in 1:nSm)
	{
	N3[1,k,r] <- N3.pr[2+(nSm+1),k,r]
	}

	for (k in 1:nSm)
	{
		for (kk in k:nSm)
		{
		N3[k+1,kk,r] <- N3.pr[k+2+(nSm+1),kk,r]
		}
	}
}

# end initialisation number of smolts not generated by the model
#-------------------------------------------------------------------------------------------------------------------------

# Inititalisation N4	
#-------------------------------------------------------------------------------------------------------------------------			

for (r in 1:N)
{
	for (k in 1:nSm)
	{
	N3.init[1,k,r] <- N3.pr[(2+nSm),k,r]
	}
	logit.theta3.init[1,r] ~ dnorm(0,1)
	logit(theta3.init[1,r]) <- logit.theta3.init[1,r]

	log.N4.init[1,r] <- log(theta3.init[1,r]*sum(N3.init[1,,r]) + eps) - 0.5/tau.dummy
	N4[1,r] ~ dlnorm(log.N4.init[1,r],tau.dummy)
	
	# N9
	#-------------------------------------------------------------------------------------------------------------------------
	log.N9.pr[1,r] ~ dunif(min.log.N9[r], max.log.N9[r])
	N9[1,r] <- exp(log.N9.pr[1,r])
	
	# N8.3
	#-------------------------------------------------------------------------------------------------------------------------
	log.N8.3.pr[1,r] ~ dunif((min.log.N9[r]*1.3),(1.3*max.log.N9[r]))
	N8.3[1,r] <- exp(log.N8.3.pr[1,r])
}
	
# N8.3.1 (and N8.3.2only for NAC)
#-------------------------------------------------------------------------------------------------------------------------

for (r in 1:N.NAC)
{
	log.N8.3.1.pr[1,r] ~ dunif((min.log.N9[r]*1.5), (1.5*max.log.N9[r]))
	N8.3.1[1,r] <- exp(log.N8.3.1.pr[1,r])
	
	#N8.3.2
	#-------------------------------------------------------------------------------------------------------------------------
	log.N8.3.2.pr[1,r] ~ dunif((min.log.N9[r]*1.5), (1.5*max.log.N9[r]))
	N8.3.2[1,r] <- exp(log.N8.3.1.pr[1,r])

}
 #------------------------------------------------------------ end model	
 }
